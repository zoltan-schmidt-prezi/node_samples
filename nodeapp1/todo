TODO

stack rates to compare
add selldate to mysql
add selldate as baseline
add extra costs to mysql
add corrected cost to charts

add missing data for remaining bonds
add buydates for baseline on rate page
??fix date in moment

tabular historic data for collections (per collection?)

SOLVE CALCULATION IN THE BACKEND!!!
RETURN ONLY A JSON OBJECT FROM THE HTTP REQUEST
proper variable and function names

add authentication
cors, sql injection

DONE

PUT all portfolios on one page > no selector needed
fix hardcoded chart number (5)
NOT NEEDED set default selection for dropdown
trigger refresh after date selection (events?)
draw baselines on exchange rate charts
!!!!add date selector
add historic data
add basline for portfolios
separate common functions and page functions
FIX calculaiton on full portf
second page could be sum of portfolios
 -> stack bond portfolios?
separate chart and table for portfolios on portf page > too big diff in size to small in value change
- render triggering is a mess
add own data
- only one dataset per bond
turn into proper service
- mouseover glitches, probably rendering issue
consolidate routes> list, mysqlrates
